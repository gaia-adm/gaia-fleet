# Copyright 2015 HP Software
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[Unit]
Description=ElasticSearch 2.1.0
Documentation=https://www.elastic.co/blog/elasticsearch-2-1-0-and-2-0-1-released

After=registrator.service
Wants=registrator.service

[Service]
# Let processes take awhile to start up (for first run Docker containers)
# Large start timeout is to allow for pulling down Docker images from Registry
TimeoutStartSec=10min
TimeoutStopSec=15

# Change killmode from "control-group" to "none" to let Docker remove
# work correctly.
KillMode=none

# Get CoreOS environmental variables
EnvironmentFile=/etc/environment

# Restart policy
Restart=on-failure
RestartSec=20s

# Pre-start and Start
## Directives with "=-" are allowed to fail without consequence
ExecStartPre=-/usr/bin/docker kill es
ExecStartPre=-/usr/bin/docker rm es
# This is due to bug in which multiple docker pulls might collide in case of the same base image
# Bug had been reported here: https://github.com/docker/docker/issues/9718
# This issue still exists in Docker 1.8.1
# for now - we sync the collided services (esevi, evi, mgs and sts) using flock
ExecStartPre=/usr/bin/flock -w 600 "/home/core/pull.lock" -c "/usr/bin/docker pull elasticsearch:2.1.0"
ExecStartPre=/usr/bin/docker pull gaiaadm/volume-tools-${ENVIRON_LOCATION}
ExecStartPre=/usr/bin/docker run --rm=true -v /opt/bin:/target gaiaadm/volume-tools-${ENVIRON_LOCATION}
ExecStartPre=/opt/bin/gaia-mount.sh es-${ENVIRON}

ExecStart=/bin/bash -a -c '/usr/bin/docker run \
--name es \
-v `/opt/bin/gaia-get-mount-path.sh es-${ENVIRON}/data`:/usr/share/elasticsearch/data \
-e "SERVICE_NAME=es" -e "SERVICE_TAGS=master" \
-p 9300:9300 -p 9200:9200 \
elasticsearch:2.1.0 elasticsearch -Des.network.bind_host=0.0.0.0'

# Apply ES template that contains mappings rules fits to gaia indexes (non analyzed fields, timestamp should be recognized as date field)
ExecStartPost=/bin/bash -c ' \
  echo "es fleet unit - ExecStartPost - sleep looping until ES is up and running"; \
  until [ "$(curl -o /dev/null --silent --write-out %{http_code} http://localhost:9200/_cluster/state)" -eq "200" ]; do sleep 0.1; done; \
  echo "es fleet unit - ExecStartPost - ES is up and running - going to apply gaia mapping using REST API"; \
  /bin/curl -H "Content-Type: application/json" --silent -X POST -d "{\\\"template\\\":\\\"gaia_*\\\",\\\"mappings\\\":{\\\"_default_\\\":{\\\"dynamic_templates\\\":[{\\\"strings\\\":{\\\"match_mapping_type\\\":\\\"string\\\",\\\"mapping\\\":{\\\"type\\\":\\\"string\\\",\\\"index\\\":\\\"not_analyzed\\\"}},\\\"timestamp_field\\\":{\\\"match\\\":\\\"timestamp\\\",\\\"mapping\\\":{\\\"type\\\":\\\"date\\\"}}}]}}}" http://localhost:9200/_template/gaia_template; \
  echo "\nes fleet unit - ExecStartPost - finished applying gaia mapping using REST API"'

# Stop
ExecStop=/usr/bin/docker stop es
ExecStop=-/opt/bin/gaia-unmount.sh es-${ENVIRON}
ExecStopPost=-/opt/bin/gaia-unmount.sh es-${ENVIRON}

[Install]
WantedBy=multi-user.target
